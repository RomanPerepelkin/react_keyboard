{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyName","document","addEventListener","event","setState","key","removeEventListener","this","className","length","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,QAAS,IAFb,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,QAASG,EAAME,WAPrC,kCAWE,WAA8B,IAAD,OAC3BJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,QAASG,EAAME,WAbrC,oBAiBE,WACE,IAAQL,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKQ,UAAU,MAAf,SACGR,EAAQS,OACP,oBAAGD,UAAU,eAAb,sCAEGR,EAFH,OAMA,mBAAGQ,UAAU,eAAb,2CA7BV,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.c7a359cf.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyName: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    keyName: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ keyName: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ keyName: event.key });\n    });\n  }\n\n  render() {\n    const { keyName } = this.state;\n\n    return (\n      <div className=\"App\">\n        {keyName.length ? (\n          <p className=\"App__message\">\n            The last pressed key is [\n            {keyName}\n            ]\n          </p>\n        ) : (\n          <p className=\"App__message\">\n            Nothing was pressed yet\n          </p>\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}